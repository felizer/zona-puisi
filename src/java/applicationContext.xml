<?xml version='1.0' encoding='UTF-8' ?>
<!-- was: <?xml version="1.0" encoding="UTF-8"?> -->
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:p="http://www.springframework.org/schema/p"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
       http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.0.xsd
       http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.0.xsd">

    <!-- sebaiknya tentukan dulu classnya yaitu LocalSessionFactoryBean,
 baru kita tentukan untuk id adalah sessionFactory-->
 <!-- saya menggunakan property configLocation karena saya tetap menggunakan hibernate.cfg.xml
 makanya untuk value saya menggunakan classpath yang digunakan untuk mengarahkan konfigurasi
 ke hibernate.cfg.xml-->
 <bean id="sessionFactory" class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
<property name="configLocation" value="classpath:hibernate.cfg.xml"/>
 </bean>
 
 <!-- untuk id yang ini kita bebas untuk menentukan, lalu class mengarah ke class yang
 kita buat sebelumnya-->
 <!-- property yang terdapat dalam class HibernateCourseDao yaitu sessionFactory
 yang akan kita inject berdasarkan ref ke bean dengan id=sessionFactory-->
 <bean id="adminDao" class="com.logic.admin.HibernateAdminDaoDao">
<property name="sessionFactory" ref="sessionFactory"/>
 </bean>
</beans>
